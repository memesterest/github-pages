[{"C:\\Users\\robil\\Desktop\\memesterest\\memesterest\\src\\index.js":"1","C:\\Users\\robil\\Desktop\\memesterest\\memesterest\\src\\App.js":"2","C:\\Users\\robil\\Desktop\\memesterest\\memesterest\\src\\reportWebVitals.js":"3","C:\\Users\\robil\\Desktop\\memesterest\\memesterest\\src\\ImageUpload.js":"4","C:\\Users\\robil\\Desktop\\memesterest\\memesterest\\src\\Post.js":"5","C:\\Users\\robil\\Desktop\\memesterest\\memesterest\\src\\Widget.js":"6","C:\\Users\\robil\\Desktop\\memesterest\\memesterest\\src\\firebase.js":"7"},{"size":500,"mtime":499162500000,"results":"8","hashOfConfig":"9"},{"size":6190,"mtime":1609163108965,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"9"},{"size":2988,"mtime":1609162513107,"results":"12","hashOfConfig":"9"},{"size":6567,"mtime":1609163112257,"results":"13","hashOfConfig":"9"},{"size":0,"mtime":1609162537987,"results":"14","hashOfConfig":"9"},{"size":617,"mtime":1609162607096,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1w1b7cg",{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"C:\\Users\\robil\\Desktop\\memesterest\\memesterest\\src\\index.js",[],["34","35"],"C:\\Users\\robil\\Desktop\\memesterest\\memesterest\\src\\App.js",["36"],"import React, { useEffect, useState } from \"react\";\nimport './App.css';\nimport Post from \"./Post\";\nimport { auth, db } from \"./firebase\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport {Button, Input} from '@material-ui/core';\nimport ImageUpload from \"./ImageUpload\";\nimport Widget from \"./Widget\";\n\nfunction getModalStyle() {\n  const top = 50;\n  const left = 50;\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: 'absolute',\n    width: 300,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n\n  const [modalStyle] = useState(getModalStyle);\n  const [posts, setPosts] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [openSignIn, setOpenSignIn] = useState(false);\n  const [openPost, setOpenPost] = useState(false)\n  const [password, setPassword] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged((authUser) => {\n      if(authUser) {\n        console.log(authUser);\n        setUser(authUser);\n      } else {\n        setUser(null);\n      }\n    })\n\n    return () => {\n      unsubscribe();\n    }\n  }, [user, username])\n\n  useEffect(() => {\n    db.collection(\"posts\").orderBy('timestamp', 'desc').onSnapshot(snapshot => {\n      setPosts(snapshot.docs.map(doc => ({id: doc.id, post: doc.data()})));\n    });\n  }, []);\n\n  const signUp = (event) => {\n    event.preventDefault();\n\n    auth\n    .createUserWithEmailAndPassword(email, password)\n    .then((authUser) => {\n      return authUser.user.updateProfile({\n        displayName: username,\n      })\n    })\n    .catch((error) => alert(error.message));\n\n    setOpen(false);\n  }\n\n  const signIn = (event) => {\n    event.preventDefault();\n\n    auth\n    .signInWithEmailAndPassword(email, password)\n    .catch((error) => alert(error.message))\n\n    setOpenSignIn(false);\n  }\n\n  return (\n    <div className=\"app\">\n      <Modal\n        open={open}\n        onClose={() => setOpen(false)}\n      >\n        <div style={modalStyle} className={classes.paper}>\n          <form className=\"app__signUp\">\n            <center>\n              <img\n                className=\"app__headerImage\"\n                src=\"https://cdn.discordapp.com/attachments/752570499359572065/787648021830696980/Logo2.png\"\n                alt=\"\"\n              ></img>\n            </center>\n\n              <Input \n                placeholder=\"username\"\n                type=\"text\"\n                value={username}\n                onChange={(e) => setUsername(e.target.value)}\n              />   \n\n              <Input \n                placeholder=\"email\"\n                type=\"email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              />\n\n              <Input \n                placeholder=\"password\"\n                type=\"password\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n              />     \n\n              <Button type=\"submit\" onClick={signUp}>Register</Button>    \n          </form>\n        </div>\n      </Modal>\n\n      <Modal\n        open={openSignIn}\n        onClose={() => setOpenSignIn(false)}\n      >\n        <div style={modalStyle} className={classes.paper}>\n          <form className=\"app__signUp\">\n            <center>\n              <img\n                className=\"app__headerImage\"\n                src=\"https://cdn.discordapp.com/attachments/752570499359572065/787648021830696980/Logo2.png\"\n                alt=\"\"\n              ></img>\n            </center>\n\n            <Input \n              placeholder=\"email\"\n              type=\"email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n\n            <Input \n              placeholder=\"password\"\n              type=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            />     \n\n            <Button type=\"submit\" onClick={signIn}>Login</Button>    \n          </form>\n        </div>\n      </Modal>\n\n      <Modal\n        open={openPost}\n        onClose={() => setOpenPost(false)}\n      >\n        <div style={modalStyle} className={classes.paper}>\n          {user?.displayName ? (\n            <ImageUpload className=\"imageupload\" username={user.displayName} imagePic={user.profilePic} />\n          ): (\n            <center><h3 style={{fontWeight: \"800\"}}>LOGIN TO UPLOAD</h3></center>\n          )}\n        </div>\n      </Modal>\n\n      <div className=\"app__header\">\n        <img\n          className=\"app__headerImage\"\n          src=\"https://cdn.discordapp.com/attachments/752570499359572065/787647562504994816/Logo_1.png\"\n          alt=\"\"\n        ></img>\n\n        {user ? (\n          <div className=\"app__loginContainer\">\n            <Button onClick={() => setOpenPost(true)}>POST</Button>\n            <Button onClick={() => auth.signOut()}>Logout</Button>\n          </div>\n        ): (\n          <div className=\"app__loginContainer\">\n            <Button onClick={() => setOpenSignIn(true)}>Sign In</Button>\n            <Button onClick={() => setOpen(true)}>Sign Up</Button>\n          </div>\n        )}\n      </div> \n      \n\n      <div className=\"app__posts\">\n        <div className=\"app__postsLeft\">\n          {\n            posts.map(({id, post}) => (\n              <Post \n                color={post.color}\n                user={user}\n                postId={id}\n                key={id}\n                username={post.username}\n                imageUrl={post.imageUrl}\n                caption={post.caption}\n                profilePic={post.profilePic}\n                timestamp={post.timestamp}\n              />\n            ))\n          }\n        </div>\n\n        <div className=\"app__postsRight\">\n          \n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;","C:\\Users\\robil\\Desktop\\memesterest\\memesterest\\src\\reportWebVitals.js",[],"C:\\Users\\robil\\Desktop\\memesterest\\memesterest\\src\\ImageUpload.js",["37","38"],"import React, { useState } from 'react';\r\nimport { Button } from '@material-ui/core';\r\nimport { storage, db } from \"./firebase\";\r\nimport firebase from \"firebase\";\r\nimport \"./ImageUpload.css\";\r\n\r\nfunction ImageUpload({ username }) {\r\n    const [image, setImage] = useState(null);\r\n    const [progress, setProgress] = useState(0)\r\n    const [caption, setCaption] = useState(\"\");\r\n    const [color, setColor] = useState(\"\");\r\n    const [likes, setLikes] = useState(0);\r\n\r\n    const handleChange = (e) => {\r\n        if(e.target.files[0]) {\r\n            setImage(e.target.files[0])\r\n        }\r\n    }\r\n\r\n    const handleUpload = (e) => {\r\n        const uploadTask = storage.ref(`images/${image.name}`).put(image);\r\n\r\n        uploadTask.on(\r\n            \"state_changed\",\r\n            (snapshot) => {\r\n                const progress = Math.round(\r\n                    (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n                );\r\n                setProgress(progress);\r\n            },\r\n            (error) => {\r\n                console.log(error);\r\n                alert(error.message);\r\n            },\r\n            () => {\r\n                storage\r\n                .ref(\"images\")\r\n                .child(image.name)\r\n                .getDownloadURL()\r\n                .then(url => {\r\n                    db.collection(\"posts\").add({\r\n                        timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n                        caption: caption,\r\n                        imageUrl: url,\r\n                        username: username,\r\n                        color: color,\r\n                    });\r\n\r\n                    setProgress(0);\r\n                    setCaption(\"\");\r\n                    setImage(null);\r\n                    setColor(\"\");\r\n                })\r\n            }\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"imageupload\">\r\n            <progress className=\"imageupload__progress\" value={progress} max=\"100\" />\r\n\r\n            <input \r\n                className=\"imageupload__caption\"\r\n                type=\"text\" \r\n                placeholder=\"Enter a caption..\" \r\n                onChange={event => setCaption(event.target.value)} \r\n                value={caption} \r\n            />\r\n            \r\n            <div className=\"imageupload__main\">\r\n                <input \r\n                    type=\"file\" \r\n                    onChange={handleChange} \r\n                />\r\n            </div>\r\n\r\n            <div className=\"imageupload__usernameColor\">\r\n                <h3>Username color</h3>\r\n                <input \r\n                    type=\"color\"\r\n                    value={color}\r\n                    onChange={event => setColor(event.target.value)}\r\n                />\r\n            </div>\r\n            \r\n            <Button \r\n                className=\"imageupload__button\"\r\n                onClick={handleUpload}\r\n            >\r\n                Upload\r\n            </Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageUpload","C:\\Users\\robil\\Desktop\\memesterest\\memesterest\\src\\Post.js",["39","40","41","42","43","44","45"],"import React, { useEffect, useState, Component } from 'react';\r\nimport \"./Post.css\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { db } from './firebase';\r\nimport firebase from \"firebase\";\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\r\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\n\r\nfunction getModalStyle() {\r\n    const top = 50;\r\n    const left = 50;\r\n  \r\n    return {\r\n      top: `${top}%`,\r\n      left: `${left}%`,\r\n      transform: `translate(-${top}%, -${left}%)`,\r\n    };\r\n  }\r\n  \r\n  const useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n      position: 'absolute',\r\n      width: 300,\r\n      height: 300,\r\n      backgroundColor: theme.palette.background.transparent,\r\n      padding: theme.spacing(2, 4, 3),\r\n    },\r\n  }));\r\n\r\nfunction Post({ color, postId, user, imageUrl, username, caption, profilePic, timestamp }) {\r\n    const classes = useStyles();\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const [modalStyle] = useState(getModalStyle);\r\n    const [comments, setComments] = useState([]);\r\n    const [comment, setComment] = useState(\"\");\r\n    const [like, setLike] = useState([]);\r\n    const [usernameMatch, setUsernameMatch] = useState(\"\")\r\n\r\n    useEffect(() => {\r\n        let unsubscribe;\r\n        if(postId) {\r\n            unsubscribe = db\r\n            .collection(\"posts\")\r\n            .doc(postId)\r\n            .collection(\"comments\")\r\n            .orderBy(\"timestamp\", \"desc\")\r\n            .onSnapshot((snapshot) => {\r\n                setComments(snapshot.docs.map((doc) => doc.data()))\r\n            });\r\n        }\r\n\r\n        if(postId) {\r\n            unsubscribe = db\r\n            .collection(\"posts\")\r\n            .doc(postId)\r\n            .collection(\"likes\")\r\n            .onSnapshot((snapshot) => {\r\n                setLike(snapshot.docs.length)\r\n            })\r\n        }\r\n\r\n        return () => {\r\n            unsubscribe();\r\n        }\r\n\r\n        setUsernameMatch({username});\r\n    }, [postId])\r\n\r\n    const postComment = (e) => {\r\n        e.preventDefault();\r\n\r\n        db.collection(\"posts\").doc(postId).collection(\"comments\").add({\r\n            text: comment,\r\n            username: user.displayName,\r\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n        })\r\n\r\n        setComment(\"\");\r\n    }\r\n\r\n    const deletePost = (e) => {\r\n        if(user) {\r\n            if(user.displayName == username) {\r\n                db.collection(\"posts\").doc(postId).delete({\r\n\r\n                })\r\n            } else {\r\n                alert(\"YOU DONT HAVE PERMISSIONS TO DELETE THIS IS POST\")\r\n            }\r\n        } else {\r\n            alert(\"YOU DONT HAVE PERMISSIONS TO DELETE THIS IS POST\");\r\n        }\r\n    }\r\n\r\n    const likePost = (e) => {\r\n        if(user) {\r\n            db.collection(\"posts\").doc(postId).collection(\"likes\").add({\r\n\r\n            })\r\n    \r\n            setOpen(true);\r\n        }\r\n    }\r\n\r\n    const copyCodeToClipboard = () => {\r\n        navigator.clipboard.writeText(imageUrl);\r\n        alert(\"Copied ImageUrl\")\r\n    }\r\n\r\n    return (\r\n        <div className=\"post\">\r\n            <Modal\r\n                open={open}\r\n                onClose={() => setOpen(false)}\r\n            >\r\n                <div style={modalStyle} className={classes.paper}>\r\n                    <h3 style={{color: \"white\", textAlign: \"center\",fontWeight: \"800\", fontSize: \"20px\"}}>You liked the Post from {username}</h3>\r\n                    <FavoriteIcon style={{padding: \"50px\", height: \"200px\", width: \"200px\", color: \"red\"}}/>\r\n                </div>\r\n            </Modal>\r\n            <div className=\"post__header\">\r\n                <h3 style={{backgroundColor: `${color}`, padding: \"4px\", borderRadius: \"5px\"}}>{username}</h3>\r\n                <img\r\n                    className=\"app__headerImage\"\r\n                    src=\"https://cdn.discordapp.com/attachments/752570499359572065/787647562504994816/Logo_1.png\"\r\n                    alt=\"\"\r\n                ></img>\r\n            </div>\r\n\r\n            <img \r\n                className=\"post__image\"\r\n                src={imageUrl}\r\n                alt={username}\r\n                onDoubleClick={likePost}\r\n            />\r\n            <div className=\"post__infoRow\">\r\n                <div className=\"post__infoRow\">\r\n                    <FavoriteIcon \r\n                        className=\"post__like\"\r\n                        onClick={likePost}\r\n                    />\r\n                    <h3 className=\"post__likes\">{like}</h3>\r\n                </div>\r\n                \r\n                <div className=\"post__infoRow\">\r\n                    <FileCopyIcon \r\n                        className=\"post__save\"\r\n                        onClick={copyCodeToClipboard}\r\n                    />\r\n                    \r\n                    <DeleteIcon \r\n                        className=\"post__like\"\r\n                        onClick={deletePost}\r\n                    />\r\n                </div>\r\n                \r\n            </div>\r\n            \r\n            <center><h3 className=\"post__captionTitle\">CAPTION</h3></center>\r\n            <h4 className=\"post__text\"><strong>{username}:</strong> {caption}</h4>\r\n\r\n            <div className=\"post__comments\">\r\n                <center><h3>COMMENTS</h3></center>\r\n                {comments.map((comment) => (\r\n                    <p>\r\n                        <strong className=\"post__comment__text\">{comment.username}</strong> {comment.text}\r\n                    </p>\r\n                ))}\r\n            </div>\r\n\r\n            {\r\n                user&& (\r\n                    <form className=\"post__commentBox\">\r\n                        <input \r\n                            className=\"post__input\"\r\n                            type=\"text\"\r\n                            placeholder=\"Add a comment...\"\r\n                            value={comment}\r\n                            onChange={(e) => setComment(e.target.value)}\r\n                        />\r\n                        <button\r\n                            disabled={!comment}\r\n                            className=\"post__button\"\r\n                            type=\"submit\"\r\n                            onClick={postComment}\r\n                        >\r\n                            Post\r\n                        </button>\r\n                    </form>\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post\r\n","C:\\Users\\robil\\Desktop\\memesterest\\memesterest\\src\\Widget.js",[],"C:\\Users\\robil\\Desktop\\memesterest\\memesterest\\src\\firebase.js",[],{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":9,"column":8,"nodeType":"52","messageId":"53","endLine":9,"endColumn":14},{"ruleId":"50","severity":1,"message":"54","line":12,"column":12,"nodeType":"52","messageId":"53","endLine":12,"endColumn":17},{"ruleId":"50","severity":1,"message":"55","line":12,"column":19,"nodeType":"52","messageId":"53","endLine":12,"endColumn":27},{"ruleId":"50","severity":1,"message":"56","line":1,"column":38,"nodeType":"52","messageId":"53","endLine":1,"endColumn":47},{"ruleId":"50","severity":1,"message":"57","line":3,"column":8,"nodeType":"52","messageId":"53","endLine":3,"endColumn":14},{"ruleId":"50","severity":1,"message":"58","line":8,"column":8,"nodeType":"52","messageId":"53","endLine":8,"endColumn":19},{"ruleId":"50","severity":1,"message":"59","line":42,"column":12,"nodeType":"52","messageId":"53","endLine":42,"endColumn":25},{"ruleId":"60","severity":1,"message":"61","line":71,"column":9,"nodeType":"62","messageId":"63","endLine":71,"endColumn":38},{"ruleId":"64","severity":1,"message":"65","line":72,"column":8,"nodeType":"66","endLine":72,"endColumn":16,"suggestions":"67"},{"ruleId":"68","severity":1,"message":"69","line":88,"column":33,"nodeType":"70","messageId":"71","endLine":88,"endColumn":35},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],"no-unused-vars","'Widget' is defined but never used.","Identifier","unusedVar","'likes' is assigned a value but never used.","'setLikes' is assigned a value but never used.","'Component' is defined but never used.","'Avatar' is defined but never used.","'ThumbUpIcon' is defined but never used.","'usernameMatch' is assigned a value but never used.","no-unreachable","Unreachable code.","ExpressionStatement","unreachableCode","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'username'. Either include it or remove the dependency array. If 'setUsernameMatch' needs the current value of 'username', you can also switch to useReducer instead of useState and read 'username' in the reducer.","ArrayExpression",["74"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"75","fix":"76"},"Update the dependencies array to be: [postId, username]",{"range":"77","text":"78"},[2169,2177],"[postId, username]"]